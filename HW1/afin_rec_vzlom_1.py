alphabet_text = 'абвгдеёжзийклмнопрстуфхцчшщъыьэюя'
text = 'национальныйисследовательскийуниверситетвысшаяшколаэкономикиисследовательскийуниверситетосуществляющийсвоюмиссиючерезнаучнообразовательнуюпроектнуюэкспертноаналитическуюисоциокультурнуюдеятельностинаосновемеждународныхнаучныхиорганизационныхстандартовмыосознаемсебячастьюмировогоакадемическогосообществасчитаеммеждународноепартнерствововлеченностьвглобальноеуниверситетскоевзаимодействиеключевымиэлементаминашегодвижениявпередбудучироссийскимуниверситетоммыработаемнаблагороссиииеегражданнашуниверситетэтоколлективученыхсотрудниковаспирантовистудентовкоторыхотличаетвнутренняяприверженностькподдержаниювысокихакадемическихстандартовсвоейдеятельностимыстремимсяобеспечитьнаиболееблагоприятныеусловиядляразвитиякаждогочленанашегоколлективанациональныйисследовательскийуниверситетвысшаяшколаэкономикиисследовательскийуниверситетосуществляющийсвоюмиссиючерезнаучнообразовательнуюпроектнуюэкспертноаналитическуюисоциокультурнуюдеятельностинаосновемеждународныхнаучныхиорганизационныхстандартовмыосознаемсебячастьюмировогоакадемическогосообществасчитаеммеждународноепартнерствововлеченностьвглобальноеуниверситетскоевзаимодействиеключевымиэлементаминашегодвижениявпередбудучироссийскимуниверситетоммыработаемнаблагороссиииеегражданнашуниверситетэтоколлективученыхсотрудниковаспирантовистудентовкоторыхотличаетвнутренняяприверженностькподдержаниювысокихакадемическихстандартовсвоейдеятельностимыстремимсяобеспечитьнаиболееблагоприятныеусловиядляразвитиякаждогочленанашегоколлективанациональныйисследовательскийуниверситетвысшаяшколаэкономикиисследовательскийуниверситетосуществляющийсвоюмиссиючерезнаучнообразовательнуюпроектнуюэкспертноаналитическуюисоциокультурнуюдеятельностинаосновемеждународныхнаучныхиорганизационныхстандартовмыосознаемсебячастьюмировогоакадемическогосообществасчитаеммеждународноепартнерствововлеченностьвглобальноеуниверситетскоевзаимодействиеключевымиэлементаминашегодвижениявпередбудучироссийскимуниверситетоммыработаемнаблагороссиииеегражданнашуниверситетэтоколлективученыхсотрудниковаспирантовистудентовкоторыхотличаетвнутренняяприверженностькподдержаниювысокихакадемическихстандартовсвоейдеятельностимыстремимсяобеспечитьнаиболееблагоприятныеусловиядляразвитиякаждогочленанашегоколлективанациональныйисследовательскийуниверситетвысшаяшколаэкономикиисследовательскийуниверситетосуществляющийсвоюмиссиючерезнаучнообразовательнуюпроектнуюэкспертноаналитическуюисоциокультурнуюдеятельностинаосновемеждународныхнаучныхиорганизационныхстандартовмыосознаемсебячастьюмировогоакадемическогосообществасчитаеммеждународноепартнерствововлеченностьвглобальноеуниверситетскоевзаимодействиеключевымиэлементаминашегодвижениявпередбудучироссийскимуниверситетоммыработаемнаблагороссиииеегражданнашуниверситетэтоколлективученыхсотрудниковаспирантовистудентовкоторыхотличаетвнутренняяприверженностькподдержаниювысокихакадемическихстандартовсвоейдеятельностимыстремимсяобеспечитьнаиболееблагоприятныеусловиядляразвитиякаждогочленанашегоколлектива'
key = '997 977 887 877'
first_key = key.split()
key = [(int(item) % len(alphabet_text)) for item in first_key]

def encode(text_to_encode: str, encode_key_a: list, encode_key_b: list) -> str:
    """encode text_to_encode and return encryption_text"""
    encryption_text = ''
    for i in range(0, len(text_to_encode)):
        if i > 1:
            encode_key_a.append((encode_key_a[i - 1] * encode_key_a[i - 2]) % len(alphabet_text))
            encode_key_b.append((encode_key_b[i - 1] + encode_key_b[i - 2]) % len(alphabet_text))

        if alphabet_text.find(text_to_encode[i]) != -1:
            encryption_text += alphabet_text[((encode_key_a[i] * alphabet_text.find(text_to_encode[i])
                                               + encode_key_b[i]) % len(alphabet_text))]
        else:
            encryption_text += '?'

    return encryption_text

text2 = text
text = encode(text, key[::2], key[1::2])
while text != text2:
    text = encode(text, key[::2], key[1::2])
    print(text)